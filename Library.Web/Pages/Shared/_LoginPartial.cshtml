@using Microsoft.AspNetCore.Identity
@inject SignInManager<Library.DataAccess.Models.User> SignInManager
@inject UserManager<Library.DataAccess.Models.User> UserManager

<ul class="navbar-nav gap-2">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-page="/Main/MyBooks" title="my-books">My Books</a>
        </li>
        @if(User.IsInRole("Admin"))
        {
            <li class="nav-item">
                <a class="nav-link text-danger" asp-area="Admin" asp-page="/Manager/AddBook" title="admin">Admin</a>
            </li>
        }
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello, @User.Identity?.Name!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
